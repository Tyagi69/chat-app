package com.brainmentors.chatapp.network;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;

// thread == Worker 
// Worker need a Job to Perform
//For Job u give Runnable
//Once job is created via Runnable so write the job logic a run fuction
//Assign a job to a Thread/Worker

public class ServerWorker extends Thread {
	private Socket clientSocket;
	private InputStream in;
	private OutputStream out;
	public ServerWorker(Socket clientSocket) throws IOException {
		this.clientSocket = clientSocket;
		in = clientSocket.getInputStream(); //Client Data Read
		out = clientSocket.getOutputStream(); //Client Data Write
	}
	@Override
	public void run() {
		//Job to Perform
		//Logic
		for(int i=1; i<=5; i++) {
			System.out.println("RUN I is "+i+" "+Thread.currentThread());
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
	}
	public static void main(String[] args) {
//		ServerWorker job = new ServerWorker();
		ServerWorker worker = new ServerWorker();
		worker.start();
		//Assign the job to a Thread/Worker
//		Thread worker = new Thread (job,"Worker1");
//  	worker.start(); //Internally it call run ()
		for(int j=1; j<=5; j++) {
			System.out.println("main "+j+" "+Thread.currentThread());
		}
		
	}


}
